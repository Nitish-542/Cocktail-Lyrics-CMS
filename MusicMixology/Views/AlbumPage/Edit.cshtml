@model MusicMixology.ViewModels.AlbumViewModel

@{
    // Set the page title for display and use in layout
    ViewData["Title"] = "Edit Album";
}

<!-- Page Heading -->
<h2 class="mb-4">@ViewData["Title"]</h2>

<!-- Begin form for editing an album -->
<form asp-action="Edit" method="post">
    <!-- Anti-forgery token to prevent CSRF attacks -->
    @Html.AntiForgeryToken()

    <!-- Hidden field to hold the AlbumId (used for identifying the album being edited) -->
    <input type="hidden" asp-for="AlbumId" />

    <!-- Input field for the album title -->
    <div class="form-group mb-3">
        <label asp-for="AlbumTitle" class="form-label"></label>
        <input asp-for="AlbumTitle" class="form-control" />
        <span asp-validation-for="AlbumTitle" class="text-danger"></span>
    </div>

    <!-- Dropdown to select the artist associated with the album -->
    <div class="form-group mb-4">
        <label asp-for="ArtistId" class="form-label"></label>
        <select asp-for="ArtistId" class="form-control" asp-items="Model.ArtistList">
            <option value="">-- Select Artist --</option>
        </select>
        <span asp-validation-for="ArtistId" class="text-danger"></span>
    </div>

    <!-- Submit button to save changes -->
    <button type="submit" class="btn btn-primary">Save Changes</button>
    
    <!-- Link to cancel and go back to the album index page -->
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

<!-- Include client-side validation scripts -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
